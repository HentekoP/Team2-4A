<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_third_person_character_8cs" kind="file">
    <compoundname>ThirdPersonCharacter.cs</compoundname>
    <innerclass refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character" prot="public">UnityStandardAssets::Characters::ThirdPerson::ThirdPersonCharacter</innerclass>
    <innernamespace refid="namespace_unity_standard_assets_1_1_characters_1_1_third_person">UnityStandardAssets::Characters::ThirdPerson</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">UnityStandardAssets.Characters.ThirdPerson</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>[RequireComponent(typeof(Rigidbody))]</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>[RequireComponent(typeof(CapsuleCollider))]</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>[RequireComponent(typeof(Animator))]</highlight></codeline>
<codeline lineno="8" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character" kindref="compound">ThirdPersonCharacter</ref><sp/>:<sp/>MonoBehaviour</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1abfcc3b7d8a594da6ca339084b40f7c4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[SerializeField]<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_MovingTurnSpeed<sp/>=<sp/>360;</highlight></codeline>
<codeline lineno="11" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a0cda6ea9a462602a0b5bd423cca6b511" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[SerializeField]<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_StationaryTurnSpeed<sp/>=<sp/>180;</highlight></codeline>
<codeline lineno="12" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1ac0c66704f85f315a27a5df6486ef44c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[SerializeField]<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_JumpPower<sp/>=<sp/>12f;</highlight></codeline>
<codeline lineno="13" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a96f6d489c7b2c4b11803df21d3dfd5a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[Range(1f,<sp/>4f)][SerializeField]<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_GravityMultiplier<sp/>=<sp/>2f;</highlight></codeline>
<codeline lineno="14" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a2f4b228c96a72752ac2fe1053dc33e55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[SerializeField]<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_RunCycleLegOffset<sp/>=<sp/>0.2f;<sp/></highlight><highlight class="comment">//specific<sp/>to<sp/>the<sp/>character<sp/>in<sp/>sample<sp/>assets,<sp/>will<sp/>need<sp/>to<sp/>be<sp/>modified<sp/>to<sp/>work<sp/>with<sp/>others</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1afa8579a876e3479635c76bb032143304" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[SerializeField]<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_MoveSpeedMultiplier<sp/>=<sp/>1f;</highlight></codeline>
<codeline lineno="16" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a0c12ea639071130b683bdf3fd5be4b05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[SerializeField]<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_AnimSpeedMultiplier<sp/>=<sp/>1f;</highlight></codeline>
<codeline lineno="17" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a8c5822142d140cdab9c5cc861ccaafa3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[SerializeField]<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_GroundCheckDistance<sp/>=<sp/>0.1f;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a7e2b3af2d2f881814de9640c0f0a47fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rigidbody<sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a7e2b3af2d2f881814de9640c0f0a47fd" kindref="member">m_Rigidbody</ref>;</highlight></codeline>
<codeline lineno="20" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a59c688bc127ce32d8593d1e6944f50a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Animator<sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a59c688bc127ce32d8593d1e6944f50a2" kindref="member">m_Animator</ref>;</highlight></codeline>
<codeline lineno="21" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a8bd4ee0f270bcd3637bf1f1a1981c6fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a8bd4ee0f270bcd3637bf1f1a1981c6fb" kindref="member">m_IsGrounded</ref>;</highlight></codeline>
<codeline lineno="22" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a99f4ab5db49cb46a8ed8e9ad24f3acbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a99f4ab5db49cb46a8ed8e9ad24f3acbe" kindref="member">m_OrigGroundCheckDistance</ref>;</highlight></codeline>
<codeline lineno="23" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1aec61802af46e1aefd1698575557697a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>k_Half<sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="24" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1af54ebd5d58bcc99a8eb87552cc4e4afb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1af54ebd5d58bcc99a8eb87552cc4e4afb" kindref="member">m_TurnAmount</ref>;</highlight></codeline>
<codeline lineno="25" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1ad9b4e69fdf5216be9183465aa2b7e4ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1ad9b4e69fdf5216be9183465aa2b7e4ea" kindref="member">m_ForwardAmount</ref>;</highlight></codeline>
<codeline lineno="26" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a97030bad5e8d6654702c278b93ce2f01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a97030bad5e8d6654702c278b93ce2f01" kindref="member">m_GroundNormal</ref>;</highlight></codeline>
<codeline lineno="27" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1ac30335643f661d8d9af6b93f14dc1966" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1ac30335643f661d8d9af6b93f14dc1966" kindref="member">m_CapsuleHeight</ref>;</highlight></codeline>
<codeline lineno="28" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1abf62341bb44d797c3e69cc4a6087af7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1abf62341bb44d797c3e69cc4a6087af7b" kindref="member">m_CapsuleCenter</ref>;</highlight></codeline>
<codeline lineno="29" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1af0105c57713ed130f89856126f4d5ccb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CapsuleCollider<sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1af0105c57713ed130f89856126f4d5ccb" kindref="member">m_Capsule</ref>;</highlight></codeline>
<codeline lineno="30" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a8f6c4c6881b0c6fdab9576f0a3717f63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a8f6c4c6881b0c6fdab9576f0a3717f63" kindref="member">m_Crouching</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a9dd1bdc77c6c4641d525c26cf64c51f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a9dd1bdc77c6c4641d525c26cf64c51f4" kindref="member">Start</ref>()</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Animator<sp/>=<sp/>GetComponent&lt;Animator&gt;();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Rigidbody<sp/>=<sp/>GetComponent&lt;Rigidbody&gt;();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Capsule<sp/>=<sp/>GetComponent&lt;CapsuleCollider&gt;();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_CapsuleHeight<sp/>=<sp/>m_Capsule.height;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_CapsuleCenter<sp/>=<sp/>m_Capsule.center;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Rigidbody.constraints<sp/>=<sp/>RigidbodyConstraints.FreezeRotationX<sp/>|<sp/>RigidbodyConstraints.FreezeRotationY<sp/>|<sp/>RigidbodyConstraints.FreezeRotationZ;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_OrigGroundCheckDistance<sp/>=<sp/>m_GroundCheckDistance;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1aadd768e5eafcd30ee3f3c1067db4a0e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1aadd768e5eafcd30ee3f3c1067db4a0e3" kindref="member">Move</ref>(Vector3<sp/>move,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>crouch,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>jump)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>the<sp/>world<sp/>relative<sp/>moveInput<sp/>vector<sp/>into<sp/>a<sp/>local-relative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>amount<sp/>and<sp/>forward<sp/>amount<sp/>required<sp/>to<sp/>head<sp/>in<sp/>the<sp/>desired</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(move.magnitude<sp/>&gt;<sp/>1f)<sp/>move.Normalize();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>move<sp/>=<sp/>transform.InverseTransformDirection(move);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CheckGroundStatus();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>move<sp/>=<sp/>Vector3.ProjectOnPlane(move,<sp/>m_GroundNormal);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TurnAmount<sp/>=<sp/>Mathf.Atan2(move.x,<sp/>move.z);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ForwardAmount<sp/>=<sp/>move.z;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApplyExtraTurnRotation();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>control<sp/>and<sp/>velocity<sp/>handling<sp/>is<sp/>different<sp/>when<sp/>grounded<sp/>and<sp/>airborne:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_IsGrounded)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandleGroundedMovement(crouch,<sp/>jump);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandleAirborneMovement();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScaleCapsuleForCrouching(crouch);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PreventStandingInLowHeadroom();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>input<sp/>and<sp/>other<sp/>state<sp/>parameters<sp/>to<sp/>the<sp/>animator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateAnimator(move);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1add840dad056883e4abc68f0bb8daae06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1add840dad056883e4abc68f0bb8daae06" kindref="member">ScaleCapsuleForCrouching</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>crouch)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_IsGrounded<sp/>&amp;&amp;<sp/>crouch)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Crouching)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Capsule.height<sp/>=<sp/>m_Capsule.height<sp/>/<sp/>2f;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Capsule.center<sp/>=<sp/>m_Capsule.center<sp/>/<sp/>2f;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Crouching<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>crouchRay<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Ray(m_Rigidbody.position<sp/>+<sp/>Vector3.up<sp/>*<sp/>m_Capsule.radius<sp/>*<sp/>k_Half,<sp/>Vector3.up);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>crouchRayLength<sp/>=<sp/>m_CapsuleHeight<sp/>-<sp/>m_Capsule.radius<sp/>*<sp/>k_Half;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Physics.SphereCast(crouchRay,<sp/>m_Capsule.radius<sp/>*<sp/>k_Half,<sp/>crouchRayLength,<sp/>Physics.AllLayers,<sp/>QueryTriggerInteraction.Ignore))</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Crouching<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Capsule.height<sp/>=<sp/>m_CapsuleHeight;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Capsule.center<sp/>=<sp/>m_CapsuleCenter;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Crouching<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1aca825be304024c3553d7152ed2ccde36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1aca825be304024c3553d7152ed2ccde36" kindref="member">PreventStandingInLowHeadroom</ref>()</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prevent<sp/>standing<sp/>up<sp/>in<sp/>crouch-only<sp/>zones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_Crouching)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>crouchRay<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Ray(m_Rigidbody.position<sp/>+<sp/>Vector3.up<sp/>*<sp/>m_Capsule.radius<sp/>*<sp/>k_Half,<sp/>Vector3.up);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>crouchRayLength<sp/>=<sp/>m_CapsuleHeight<sp/>-<sp/>m_Capsule.radius<sp/>*<sp/>k_Half;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Physics.SphereCast(crouchRay,<sp/>m_Capsule.radius<sp/>*<sp/>k_Half,<sp/>crouchRayLength,<sp/>Physics.AllLayers,<sp/>QueryTriggerInteraction.Ignore))</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Crouching<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a63d089f52d2077cf259baf90c60c1247" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a63d089f52d2077cf259baf90c60c1247" kindref="member">UpdateAnimator</ref>(Vector3<sp/>move)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>animator<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Animator.SetFloat(</highlight><highlight class="stringliteral">&quot;Forward&quot;</highlight><highlight class="normal">,<sp/>m_ForwardAmount,<sp/>0.1f,<sp/>Time.deltaTime);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Animator.SetFloat(</highlight><highlight class="stringliteral">&quot;Turn&quot;</highlight><highlight class="normal">,<sp/>m_TurnAmount,<sp/>0.1f,<sp/>Time.deltaTime);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Animator.SetBool(</highlight><highlight class="stringliteral">&quot;Crouch&quot;</highlight><highlight class="normal">,<sp/>m_Crouching);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Animator.SetBool(</highlight><highlight class="stringliteral">&quot;OnGround&quot;</highlight><highlight class="normal">,<sp/>m_IsGrounded);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_IsGrounded)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Animator.SetFloat(</highlight><highlight class="stringliteral">&quot;Jump&quot;</highlight><highlight class="normal">,<sp/>m_Rigidbody.velocity.y);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>which<sp/>leg<sp/>is<sp/>behind,<sp/>so<sp/>as<sp/>to<sp/>leave<sp/>that<sp/>leg<sp/>trailing<sp/>in<sp/>the<sp/>jump<sp/>animation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(This<sp/>code<sp/>is<sp/>reliant<sp/>on<sp/>the<sp/>specific<sp/>run<sp/>cycle<sp/>offset<sp/>in<sp/>our<sp/>animations,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>assumes<sp/>one<sp/>leg<sp/>passes<sp/>the<sp/>other<sp/>at<sp/>the<sp/>normalized<sp/>clip<sp/>times<sp/>of<sp/>0.0<sp/>and<sp/>0.5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>runCycle<sp/>=</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mathf.Repeat(</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Animator.GetCurrentAnimatorStateInfo(0).normalizedTime<sp/>+<sp/>m_RunCycleLegOffset,<sp/>1);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jumpLeg<sp/>=<sp/>(runCycle<sp/>&lt;<sp/>k_Half<sp/>?<sp/>1<sp/>:<sp/>-1)<sp/>*<sp/>m_ForwardAmount;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_IsGrounded)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Animator.SetFloat(</highlight><highlight class="stringliteral">&quot;JumpLeg&quot;</highlight><highlight class="normal">,<sp/>jumpLeg);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>anim<sp/>speed<sp/>multiplier<sp/>allows<sp/>the<sp/>overall<sp/>speed<sp/>of<sp/>walking/running<sp/>to<sp/>be<sp/>tweaked<sp/>in<sp/>the<sp/>inspector,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>affects<sp/>the<sp/>movement<sp/>speed<sp/>because<sp/>of<sp/>the<sp/>root<sp/>motion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_IsGrounded<sp/>&amp;&amp;<sp/>move.magnitude<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Animator.speed<sp/>=<sp/>m_AnimSpeedMultiplier;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>use<sp/>that<sp/>while<sp/>airborne</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Animator.speed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a0fcd5f264d6fc83a401598a1ce7bc94c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a0fcd5f264d6fc83a401598a1ce7bc94c" kindref="member">HandleAirborneMovement</ref>()</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>extra<sp/>gravity<sp/>from<sp/>multiplier:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>extraGravityForce<sp/>=<sp/>(Physics.gravity<sp/>*<sp/>m_GravityMultiplier)<sp/>-<sp/>Physics.gravity;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Rigidbody.AddForce(extraGravityForce);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_GroundCheckDistance<sp/>=<sp/>m_Rigidbody.velocity.y<sp/>&lt;<sp/>0<sp/>?<sp/>m_OrigGroundCheckDistance<sp/>:<sp/>0.01f;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a62ee4fd6a8c6ca40aee718e637c660d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1a62ee4fd6a8c6ca40aee718e637c660d8" kindref="member">HandleGroundedMovement</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>crouch,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>jump)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>whether<sp/>conditions<sp/>are<sp/>right<sp/>to<sp/>allow<sp/>a<sp/>jump:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jump<sp/>&amp;&amp;<sp/>!crouch<sp/>&amp;&amp;<sp/>m_Animator.GetCurrentAnimatorStateInfo(0).IsName(</highlight><highlight class="stringliteral">&quot;Grounded&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>jump!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Rigidbody.velocity<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(m_Rigidbody.velocity.x,<sp/>m_JumpPower,<sp/>m_Rigidbody.velocity.z);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_IsGrounded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Animator.applyRootMotion<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_GroundCheckDistance<sp/>=<sp/>0.1f;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1ac9145b9a4db68daef95e421a42925a33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1ac9145b9a4db68daef95e421a42925a33" kindref="member">ApplyExtraTurnRotation</ref>()</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>help<sp/>the<sp/>character<sp/>turn<sp/>faster<sp/>(this<sp/>is<sp/>in<sp/>addition<sp/>to<sp/>root<sp/>rotation<sp/>in<sp/>the<sp/>animation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>turnSpeed<sp/>=<sp/>Mathf.Lerp(m_StationaryTurnSpeed,<sp/>m_MovingTurnSpeed,<sp/>m_ForwardAmount);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform.Rotate(0,<sp/>m_TurnAmount<sp/>*<sp/>turnSpeed<sp/>*<sp/>Time.deltaTime,<sp/>0);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1aa3db336f6abec1d378ea7987cbb90ed7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1aa3db336f6abec1d378ea7987cbb90ed7" kindref="member">OnAnimatorMove</ref>()</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>implement<sp/>this<sp/>function<sp/>to<sp/>override<sp/>the<sp/>default<sp/>root<sp/>motion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>allows<sp/>us<sp/>to<sp/>modify<sp/>the<sp/>positional<sp/>speed<sp/>before<sp/>it&apos;s<sp/>applied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_IsGrounded<sp/>&amp;&amp;<sp/>Time.deltaTime<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>v<sp/>=<sp/>(m_Animator.deltaPosition<sp/>*<sp/>m_MoveSpeedMultiplier)<sp/>/<sp/>Time.deltaTime;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>preserve<sp/>the<sp/>existing<sp/>y<sp/>part<sp/>of<sp/>the<sp/>current<sp/>velocity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.y<sp/>=<sp/>m_Rigidbody.velocity.y;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Rigidbody.velocity<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1abfe0536f70ca42dbc2fef3a3b18c4551" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_unity_standard_assets_1_1_characters_1_1_third_person_1_1_third_person_character_1abfe0536f70ca42dbc2fef3a3b18c4551" kindref="member">CheckGroundStatus</ref>()</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RaycastHit<sp/>hitInfo;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>UNITY_EDITOR</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>helper<sp/>to<sp/>visualise<sp/>the<sp/>ground<sp/>check<sp/>ray<sp/>in<sp/>the<sp/>scene<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(transform.position<sp/>+<sp/>(Vector3.up<sp/>*<sp/>0.1f),<sp/>transform.position<sp/>+<sp/>(Vector3.up<sp/>*<sp/>0.1f)<sp/>+<sp/>(Vector3.down<sp/>*<sp/>m_GroundCheckDistance));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0.1f<sp/>is<sp/>a<sp/>small<sp/>offset<sp/>to<sp/>start<sp/>the<sp/>ray<sp/>from<sp/>inside<sp/>the<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>also<sp/>good<sp/>to<sp/>note<sp/>that<sp/>the<sp/>transform<sp/>position<sp/>in<sp/>the<sp/>sample<sp/>assets<sp/>is<sp/>at<sp/>the<sp/>base<sp/>of<sp/>the<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Physics.Raycast(transform.position<sp/>+<sp/>(Vector3.up<sp/>*<sp/>0.1f),<sp/>Vector3.down,<sp/>out<sp/>hitInfo,<sp/>m_GroundCheckDistance))</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_GroundNormal<sp/>=<sp/>hitInfo.normal;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_IsGrounded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Animator.applyRootMotion<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_IsGrounded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_GroundNormal<sp/>=<sp/>Vector3.up;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Animator.applyRootMotion<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Noguc/Downloads/Team2-4A-Yoshi/Team2-4A-Yoshi/Assets/Tools/Standard Assets/Characters/ThirdPersonCharacter/Scripts/ThirdPersonCharacter.cs"/>
  </compounddef>
</doxygen>
