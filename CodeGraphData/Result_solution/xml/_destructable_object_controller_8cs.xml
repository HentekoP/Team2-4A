<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_destructable_object_controller_8cs" kind="file">
    <compoundname>DestructableObjectController.cs</compoundname>
    <innerclass refid="class_destructable_object_controller" prot="public">DestructableObjectController</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="class_destructable_object_controller" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_destructable_object_controller" kindref="compound">DestructableObjectController</ref><sp/>:<sp/>MonoBehaviour</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7" refid="class_destructable_object_controller_1ab52da3ff129fb7093d61b1e33a31774a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>GameObject[]<sp/><ref refid="class_destructable_object_controller_1ab52da3ff129fb7093d61b1e33a31774a" kindref="member">roots</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GameObject[17];<sp/></highlight><highlight class="comment">//要素が17個入れられるようにした</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_destructable_object_controller_1ac1fc4bb1d4c1831ed210e763285fbb2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[HideInInspector]<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_destroyed_piece_controller" kindref="compound">DestroyedPieceController</ref>[]<sp/><ref refid="class_destructable_object_controller_1ac1fc4bb1d4c1831ed210e763285fbb2e" kindref="member">root_dest_pieces</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_destroyed_piece_controller" kindref="compound">DestroyedPieceController</ref>[17];</highlight><highlight class="comment">//要素が17個のピースコントローラー配列を作成</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_destructable_object_controller_1a3c6aeafa6207ee3f2cf8939745cadbff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;DestroyedPieceController&gt;<sp/><ref refid="class_destructable_object_controller_1a3c6aeafa6207ee3f2cf8939745cadbff" kindref="member">destroyed_pieces</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;DestroyedPieceController&gt;();<sp/></highlight><highlight class="comment">//リストを生成</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_destructable_object_controller_1a28b87e6fed7bfbe11e6f03dafc926e03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_destructable_object_controller_1a28b87e6fed7bfbe11e6f03dafc926e03" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="13" refid="class_destructable_object_controller_1ab491b71f21d32155140d364e1312e1dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_destructable_object_controller_1ab491b71f21d32155140d364e1312e1dc" kindref="member">loadsene</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="class_destructable_object_controller_1a90523111bcb89d21f8c2c001f994fef8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_destroyed_piece_controller" kindref="compound">DestroyedPieceController</ref><sp/><ref refid="class_destructable_object_controller_1a90523111bcb89d21f8c2c001f994fef8" kindref="member">PieceCount</ref>;<sp/></highlight><highlight class="comment">//カウントするための変数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//public<sp/>AudioClip<sp/>SE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_destructable_object_controller_1aab6a3c4ad15379fb3a625f93ed22a102" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AudioSource<sp/><ref refid="class_destructable_object_controller_1aab6a3c4ad15379fb3a625f93ed22a102" kindref="member">source</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_destructable_object_controller_1adea213d785afcebf14406644970a617b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_destructable_object_controller_1adea213d785afcebf14406644970a617b" kindref="member">Awake</ref>()</highlight><highlight class="comment">//ゲームがスタートされるとすべての子オブジェクトたちにDestroyPiceControllerアタッチするためのwake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_destructable_object_controller_1a28b87e6fed7bfbe11e6f03dafc926e03" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="class_destructable_object_controller_1a28b87e6fed7bfbe11e6f03dafc926e03" kindref="member">i</ref><sp/>&lt;<sp/>transform.childCount;<sp/><ref refid="class_destructable_object_controller_1a28b87e6fed7bfbe11e6f03dafc926e03" kindref="member">i</ref>++)</highlight><highlight class="comment">//一つ一つのオブジェクトを読み込んだら++i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>child<sp/>=<sp/>transform.GetChild(<ref refid="class_destructable_object_controller_1a28b87e6fed7bfbe11e6f03dafc926e03" kindref="member">i</ref>);</highlight><highlight class="comment">//i番目の要素を取得</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>_dpc<sp/>=<sp/>child.gameObject.AddComponent&lt;<ref refid="class_destroyed_piece_controller" kindref="compound">DestroyedPieceController</ref>&gt;();</highlight><highlight class="comment">//子オブジェクトにDestroyedPieceControllerを追加</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>_rigidbody<sp/>=<sp/>child.gameObject.AddComponent&lt;Rigidbody&gt;();</highlight><highlight class="comment">//rigidboidy追加</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>_mc<sp/>=<sp/>child.gameObject.AddComponent&lt;MeshCollider&gt;();<sp/><sp/></highlight><highlight class="comment">//MeshColliderを追加してアタッチ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mc.convex<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destroyed_pieces.Add(_dpc);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_i<sp/>=<sp/>0;<sp/>_i<sp/>&lt;<sp/>4;<sp/>_i++)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_destructable_object_controller_1ac1fc4bb1d4c1831ed210e763285fbb2e" kindref="member">root_dest_pieces</ref>[_i]<sp/>=<sp/><ref refid="class_destructable_object_controller_1ab52da3ff129fb7093d61b1e33a31774a" kindref="member">roots</ref>[_i].GetComponent&lt;<ref refid="class_destroyed_piece_controller" kindref="compound">DestroyedPieceController</ref>&gt;();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartCoroutine(<ref refid="class_destructable_object_controller_1a43d546d40a556076007ef0a7f7c1bf19" kindref="member">run_physics_steps</ref>(1));<sp/></highlight><highlight class="comment">//コンポーネントを追加するルーチン<sp/>中身は99行目</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_destructable_object_controller_1aab6a3c4ad15379fb3a625f93ed22a102" kindref="member">source</ref><sp/>=<sp/>GetComponent&lt;AudioSource&gt;();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_destructable_object_controller_1ae5bf61ca1cf69d321ae21a90fa8314a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_destructable_object_controller_1ae5bf61ca1cf69d321ae21a90fa8314a6" kindref="member">Update</ref>()</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_destroyed_piece_controller" kindref="compound">DestroyedPieceController</ref>.<ref refid="class_destroyed_piece_controller_1a1d5416d83bdc2770b517361801cae42c" kindref="member">is_dirty</ref>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>destroyed_piece<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="class_destructable_object_controller_1a3c6aeafa6207ee3f2cf8939745cadbff" kindref="member">destroyed_pieces</ref>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destroyed_piece.visited<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight><highlight class="comment">//ダメージが与えられたらdestroyed_piecesリスト内のvisited変数をfalseにする</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_i<sp/>=<sp/>0;<sp/>_i<sp/>&lt;<sp/>4;<sp/>_i++)<sp/><sp/></highlight><highlight class="comment">//root_dest_pieces配列内に格納された各DestroyedPieceControllerを起点としてfind_all_connected_pieces関数を呼び出して、接続された全てのピースを探索している</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_destructable_object_controller_1a739a3dee19ff248fb2ac64d57c12e1c1" kindref="member">find_all_connected_pieces</ref>(<ref refid="class_destructable_object_controller_1ac1fc4bb1d4c1831ed210e763285fbb2e" kindref="member">root_dest_pieces</ref>[_i]);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>piece<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="class_destructable_object_controller_1a3c6aeafa6207ee3f2cf8939745cadbff" kindref="member">destroyed_pieces</ref>)</highlight><highlight class="comment">//destroyed_piecesの配列から一つ一つの要素を取り出してpiceに代入しています</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(piece<sp/>&amp;&amp;<sp/>!piece.visited)<sp/><sp/></highlight><highlight class="comment">//ピースが接続されていなければdropの中にある処理を行う</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>piece.drop();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(piece.is_connected<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>piece.Cflg<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source.Play();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestroyedPieceController.DestroyPieceCount++;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>piece.Cflg<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="comment">/*&quot;入った&quot;*/</highlight><highlight class="normal"><ref refid="class_destroyed_piece_controller_1ade0b2b38d67d5ddeab81f04da1f79602" kindref="member">DestroyedPieceController.DestroyPieceCount</ref>);</highlight><highlight class="comment">//<sp/>ピースが崩れてピース同士の接続が切れたらカウントを増やす</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_destructable_object_controller_1a739a3dee19ff248fb2ac64d57c12e1c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_destructable_object_controller_1a739a3dee19ff248fb2ac64d57c12e1c1" kindref="member">find_all_connected_pieces</ref>(<ref refid="class_destroyed_piece_controller" kindref="compound">DestroyedPieceController</ref><sp/>destroyed_piece)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DestroyedPieceControllerに接続されているピースのリストを取得してアタッチされているオブジェの起点に接続されているピースを探索するもの</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!destroyed_piece.<ref refid="class_destroyed_piece_controller_1a4d0d418b86d7e64affb3c195af2975dc" kindref="member">visited</ref>)<sp/></highlight><highlight class="comment">//ピースが接続されているかどうか</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!destroyed_piece.<ref refid="class_destroyed_piece_controller_1a88b9e47ab647e6552834be8019ea9237" kindref="member">is_connected</ref>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destroyed_piece.visited<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//ピースが接続されていれば、そのピースを訪問済みにする</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>_pdc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>destroyed_piece.<ref refid="class_destroyed_piece_controller_1a572224915673111aee7c0b3ec47de85a" kindref="member">connected_to</ref>)<sp/></highlight><highlight class="comment">//DestroyedPieceControlleに接続されているピースのリストを取得します</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_destructable_object_controller_1a739a3dee19ff248fb2ac64d57c12e1c1" kindref="member">find_all_connected_pieces</ref>(_pdc);<sp/></highlight><highlight class="comment">//引数として渡されたピースを起点に、そのピースに接続されているすべてのピースを再帰的に探索していく</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>count<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="class_destructable_object_controller_1a3c6aeafa6207ee3f2cf8939745cadbff" kindref="member">destroyed_pieces</ref>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_destructable_object_controller_1a43d546d40a556076007ef0a7f7c1bf19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_destructable_object_controller_1a43d546d40a556076007ef0a7f7c1bf19" kindref="member">run_physics_steps</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step_count)<sp/></highlight><highlight class="comment">//ルーチンが呼ばれるたびに実行される</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_destructable_object_controller_1a28b87e6fed7bfbe11e6f03dafc926e03" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="class_destructable_object_controller_1a28b87e6fed7bfbe11e6f03dafc926e03" kindref="member">i</ref><sp/>&lt;<sp/>step_count;<sp/><ref refid="class_destructable_object_controller_1a28b87e6fed7bfbe11e6f03dafc926e03" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WaitForFixedUpdate();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>piece<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="class_destructable_object_controller_1a3c6aeafa6207ee3f2cf8939745cadbff" kindref="member">destroyed_pieces</ref>)<sp/></highlight><highlight class="comment">//子オブジェクト全部に</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>piece.make_static();<sp/></highlight><highlight class="comment">//make_staticを呼びオブジェクトにコンポーネントを加える</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110" refid="class_destructable_object_controller_1aabf654f23dee43bfe3cc9948a90a348b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_destructable_object_controller_1aabf654f23dee43bfe3cc9948a90a348b" kindref="member">ObjectAllCount</ref>()<sp/></highlight><highlight class="comment">//子オブジェクトの個数を取得する関数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_destructable_object_controller_1a28b87e6fed7bfbe11e6f03dafc926e03" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Noguc/Downloads/Team2-4A-Yoshi/Team2-4A-Yoshi/Assets/Script/Scripts/HAKAI/Scripts/Destruction System/Refractored/DestructableObjectController.cs"/>
  </compounddef>
</doxygen>
